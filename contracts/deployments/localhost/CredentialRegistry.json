{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__AlreadyRevoked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__CredentialAlreadyIssued",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__CredentialNotFound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__DocumentPreviouslyRevoked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__EmptyMetadataURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__EmptySchema",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__InvalidDocHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__InvalidPagination",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__InvalidStudent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__NoEmergencyRevocationPending",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__NotAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CredentialRegistry__TimelockNotExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "student",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "CredentialIssued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "CredentialRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "emergencyId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        }
      ],
      "name": "EmergencyRevocationCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "emergencyId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        }
      ],
      "name": "EmergencyRevocationExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "emergencyId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "EmergencyRevocationInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EMERGENCY_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EMERGENCY_TIMELOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ISSUER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PAGINATION_LIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addEmergencyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "addIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "emergencyId",
          "type": "bytes32"
        }
      ],
      "name": "cancelEmergencyRevocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "credentialToIssuerIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "credentialToStudentIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "credentials",
      "outputs": [
        {
          "internalType": "address",
          "name": "student",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "issuedAt",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "revoked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "docHashToId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "emergencyRevocations",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "emergencyId",
          "type": "bytes32"
        }
      ],
      "name": "executeEmergencyRevocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        }
      ],
      "name": "getCredential",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "student",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "docHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "issuedAt",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct CredentialRegistry.Credential",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        }
      ],
      "name": "getCredentialByHash",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "student",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "docHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "issuedAt",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            }
          ],
          "internalType": "struct CredentialRegistry.Credential",
          "name": "cred",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "getIssuerCredentialCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "getIssuerCredentials",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "credentialIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "totalCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "student",
          "type": "address"
        }
      ],
      "name": "getStudentCredentialCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "student",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "getStudentCredentials",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "credentialIds",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "totalCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalCredentials",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "initiateEmergencyRevocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        }
      ],
      "name": "isDocHashRevokedByIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "student",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "metadataURI",
          "type": "string"
        }
      ],
      "name": "issueCredential",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "issuerCredentialByIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "issuerCredentialCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "issuerRevokedDocHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "removeEmergencyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "removeIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "credentialId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "revokeCredential",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "studentCredentialByIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "studentCredentialCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe0330fc9be2d82495f0792659d7d4876518b46d2f1d0e8ac1106df882e0707a1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3769146",
    "logsBloom": "0x
    "blockHash": "0x90d72397df5e971d48429e445fa6bb2c7da5886ffec905d00b0e97f9eaa96098",
    "transactionHash": "0xe0330fc9be2d82495f0792659d7d4876518b46d2f1d0e8ac1106df882e0707a1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xe0330fc9be2d82495f0792659d7d4876518b46d2f1d0e8ac1106df882e0707a1",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x90d72397df5e971d48429e445fa6bb2c7da5886ffec905d00b0e97f9eaa96098"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xe0330fc9be2d82495f0792659d7d4876518b46d2f1d0e8ac1106df882e0707a1",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a63",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x90d72397df5e971d48429e445fa6bb2c7da5886ffec905d00b0e97f9eaa96098"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "3769146",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "bdc9bd515f0d4056276dc515566f389c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__AlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__CredentialAlreadyIssued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__CredentialNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__DocumentPreviouslyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__EmptyMetadataURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__EmptySchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__InvalidDocHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__InvalidPagination\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__InvalidStudent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__NoEmergencyRevocationPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CredentialRegistry__TimelockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"CredentialIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"CredentialRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"emergencyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"}],\"name\":\"EmergencyRevocationCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"emergencyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"}],\"name\":\"EmergencyRevocationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"emergencyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"EmergencyRevocationInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMERGENCY_TIMELOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ISSUER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PAGINATION_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"addIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"emergencyId\",\"type\":\"bytes32\"}],\"name\":\"cancelEmergencyRevocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"credentialToIssuerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"credentialToStudentIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"credentials\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"issuedAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"docHashToId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"emergencyRevocations\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"emergencyId\",\"type\":\"bytes32\"}],\"name\":\"executeEmergencyRevocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"}],\"name\":\"getCredential\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"issuedAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct CredentialRegistry.Credential\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"getCredentialByHash\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"issuedAt\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"internalType\":\"struct CredentialRegistry.Credential\",\"name\":\"cred\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getIssuerCredentialCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getIssuerCredentials\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"credentialIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"totalCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"getStudentCredentialCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getStudentCredentials\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"credentialIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"totalCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCredentials\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"initiateEmergencyRevocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"isDocHashRevokedByIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"issueCredential\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"issuerCredentialByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"issuerCredentialCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"issuerRevokedDocHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"removeIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"credentialId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"revokeCredential\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"studentCredentialByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"studentCredentialCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"cancelEmergencyRevocation(bytes32)\":{\"params\":{\"emergencyId\":\"The emergency revocation ID\"}},\"executeEmergencyRevocation(bytes32)\":{\"params\":{\"emergencyId\":\"The emergency revocation ID\"}},\"getCredential(bytes32)\":{\"params\":{\"credentialId\":\"The credential ID\"},\"returns\":{\"_0\":\"The credential data\"}},\"getIssuerCredentialCount(address)\":{\"params\":{\"issuer\":\"Issuer address  \"},\"returns\":{\"_0\":\"Number of credentials for issuer\"}},\"getIssuerCredentials(address,uint256,uint256)\":{\"params\":{\"issuer\":\"Issuer address\",\"limit\":\"Maximum number of items to return (max 100)\",\"offset\":\"Starting index\"},\"returns\":{\"credentialIds\":\"Array of credential IDs\",\"totalCount\":\"Total number of credentials for this issuer\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getStudentCredentialCount(address)\":{\"params\":{\"student\":\"Student address\"},\"returns\":{\"_0\":\"Number of credentials for student\"}},\"getStudentCredentials(address,uint256,uint256)\":{\"params\":{\"limit\":\"Maximum number of items to return (max 100)\",\"offset\":\"Starting index\",\"student\":\"Student address\"},\"returns\":{\"credentialIds\":\"Array of credential IDs\",\"totalCount\":\"Total number of credentials for this student\"}},\"getTotalCredentials()\":{\"returns\":{\"_0\":\"Total credential count\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initiateEmergencyRevocation(bytes32,string)\":{\"params\":{\"credentialId\":\"The credential to revoke\",\"reason\":\"Reason for emergency revocation\"}},\"isDocHashRevokedByIssuer(address,bytes32)\":{\"params\":{\"docHash\":\"The document hash\",\"issuer\":\"The issuer address\"},\"returns\":{\"_0\":\"True if revoked by this issuer\"}},\"isIssuer(address)\":{\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"True if account has issuer role\"}},\"issueCredential(address,bytes32,string,string)\":{\"params\":{\"docHash\":\"keccak256(file) or keccak256(fileBytes)\",\"metadataURI\":\"pointer to Azure/IPFS (no PII)\",\"schema\":\"e.g., \\\"transcript\\\", \\\"certificate\\\"\",\"student\":\"Student wallet address\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeCredential(bytes32,string)\":{\"params\":{\"credentialId\":\"The credential to revoke\",\"reason\":\"Reason for revocation\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelEmergencyRevocation(bytes32)\":{\"notice\":\"Cancel pending emergency revocation\"},\"executeEmergencyRevocation(bytes32)\":{\"notice\":\"Execute emergency revocation after timelock period\"},\"getCredential(bytes32)\":{\"notice\":\"Get credential by ID\"},\"getIssuerCredentialCount(address)\":{\"notice\":\"Get issuer credential count\"},\"getIssuerCredentials(address,uint256,uint256)\":{\"notice\":\"Get issuer credentials with pagination  \"},\"getStudentCredentialCount(address)\":{\"notice\":\"Get student credential count\"},\"getStudentCredentials(address,uint256,uint256)\":{\"notice\":\"Get student credentials with pagination\"},\"getTotalCredentials()\":{\"notice\":\"Get total number of credentials issued\"},\"initiateEmergencyRevocation(bytes32,string)\":{\"notice\":\"Initiate emergency revocation (with timelock for admin safety)\"},\"isDocHashRevokedByIssuer(address,bytes32)\":{\"notice\":\"Check if a document hash is revoked by a specific issuer\"},\"isIssuer(address)\":{\"notice\":\"Check if an address has issuer role\"},\"issueCredential(address,bytes32,string,string)\":{\"notice\":\"Issue a credential with scoped document hash validation\"},\"revokeCredential(bytes32,string)\":{\"notice\":\"Revoke a credential (only by original issuer)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CredentialRegistry.sol\":\"CredentialRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {IERC165, ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\\n\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/CredentialRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\n// Updated\\r\\n\\r\\nimport {AccessControl} from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\r\\nimport {Pausable} from \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\n\\r\\n// Custom errors for gas efficiency\\r\\nerror CredentialRegistry__InvalidStudent();\\r\\nerror CredentialRegistry__InvalidDocHash();\\r\\nerror CredentialRegistry__EmptySchema();\\r\\nerror CredentialRegistry__EmptyMetadataURI();\\r\\nerror CredentialRegistry__CredentialAlreadyIssued();\\r\\nerror CredentialRegistry__CredentialNotFound();\\r\\nerror CredentialRegistry__NotAuthorized();\\r\\nerror CredentialRegistry__AlreadyRevoked();\\r\\nerror CredentialRegistry__InvalidAddress();\\r\\nerror CredentialRegistry__DocumentPreviouslyRevoked();\\r\\nerror CredentialRegistry__InvalidPagination();\\r\\nerror CredentialRegistry__EmergencyRevocationPending();\\r\\nerror CredentialRegistry__NoEmergencyRevocationPending();\\r\\nerror CredentialRegistry__TimelockNotExpired();\\r\\n\\r\\ncontract CredentialRegistry is AccessControl, Pausable {\\r\\n    /*\\r\\n     * Role Structure:\\r\\n     * - DEFAULT_ADMIN_ROLE: Can manage the contract, add/remove issuers, pause/unpause\\r\\n     * - ISSUER_ROLE: Schools that can issue and revoke their own credentials\\r\\n     * - EMERGENCY_ADMIN_ROLE: Can initiate emergency revocations with timelock\\r\\n     *\\r\\n     * Note: Admin is not automatically an issuer to maintain proper separation of concerns\\r\\n     */\\r\\n    bytes32 public constant ISSUER_ROLE = keccak256(\\\"ISSUER_ROLE\\\");\\r\\n    bytes32 public constant EMERGENCY_ADMIN_ROLE = keccak256(\\\"EMERGENCY_ADMIN_ROLE\\\");\\r\\n\\r\\n    // Emergency revocation timelock period (7 days)\\r\\n    uint256 public constant EMERGENCY_TIMELOCK = 7 days;\\r\\n\\r\\n    struct Credential {\\r\\n        address student;\\r\\n        address issuer;\\r\\n        bytes32 docHash;\\r\\n        string schema;\\r\\n        string metadataURI;\\r\\n        uint64 issuedAt;\\r\\n        bool revoked;\\r\\n    }\\r\\n\\r\\n    struct EmergencyRevocation {\\r\\n        bytes32 credentialId;\\r\\n        uint256 timestamp;\\r\\n        string reason;\\r\\n        bool executed;\\r\\n    }\\r\\n\\r\\n    // credentialId -> Credential\\r\\n    mapping(bytes32 => Credential) public credentials;\\r\\n\\r\\n    // docHash -> credentialId (one credential per docHash)\\r\\n    mapping(bytes32 => bytes32) public docHashToId;\\r\\n\\r\\n    // Track revoked document hashes per issuer (scoped revocation)\\r\\n    // issuer -> docHash -> revoked\\r\\n    mapping(address => mapping(bytes32 => bool)) public issuerRevokedDocHashes;\\r\\n\\r\\n    // student -> credential count (for pagination)\\r\\n    mapping(address => uint256) public studentCredentialCount;\\r\\n\\r\\n    // issuer -> credential count (for pagination)  \\r\\n    mapping(address => uint256) public issuerCredentialCount;\\r\\n\\r\\n    // student -> index -> credentialId (for efficient pagination)\\r\\n    mapping(address => mapping(uint256 => bytes32)) public studentCredentialByIndex;\\r\\n\\r\\n    // issuer -> index -> credentialId (for efficient pagination)\\r\\n    mapping(address => mapping(uint256 => bytes32)) public issuerCredentialByIndex;\\r\\n\\r\\n    // credentialId -> studentIndex (for efficient removal)\\r\\n    mapping(bytes32 => uint256) public credentialToStudentIndex;\\r\\n\\r\\n    // credentialId -> issuerIndex (for efficient removal)\\r\\n    mapping(bytes32 => uint256) public credentialToIssuerIndex;\\r\\n\\r\\n    // Emergency revocations with timelock\\r\\n    mapping(bytes32 => EmergencyRevocation) public emergencyRevocations;\\r\\n\\r\\n    // Counter for unique credential IDs\\r\\n    uint256 private _credentialCounter;\\r\\n\\r\\n    // Maximum items to return in a single pagination call\\r\\n    uint256 public constant MAX_PAGINATION_LIMIT = 100;\\r\\n\\r\\n    event CredentialIssued(\\r\\n        bytes32 indexed credentialId,\\r\\n        address indexed student,\\r\\n        address indexed issuer,\\r\\n        bytes32 docHash,\\r\\n        string schema,\\r\\n        string metadataURI\\r\\n    );\\r\\n    \\r\\n    event CredentialRevoked(\\r\\n        bytes32 indexed credentialId,\\r\\n        address indexed issuer,\\r\\n        bytes32 docHash,\\r\\n        string reason\\r\\n    );\\r\\n\\r\\n    event EmergencyRevocationInitiated(\\r\\n        bytes32 indexed emergencyId,\\r\\n        bytes32 indexed credentialId,\\r\\n        address indexed initiator,\\r\\n        string reason\\r\\n    );\\r\\n\\r\\n    event EmergencyRevocationExecuted(\\r\\n        bytes32 indexed emergencyId,\\r\\n        bytes32 indexed credentialId\\r\\n    );\\r\\n\\r\\n    event EmergencyRevocationCancelled(\\r\\n        bytes32 indexed emergencyId,\\r\\n        bytes32 indexed credentialId\\r\\n    );\\r\\n\\r\\n    constructor(address admin) {\\r\\n        if (admin == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\\r\\n        _grantRole(EMERGENCY_ADMIN_ROLE, admin);\\r\\n    }\\r\\n\\r\\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Issue a credential with scoped document hash validation\\r\\n     * @param student Student wallet address\\r\\n     * @param docHash keccak256(file) or keccak256(fileBytes)\\r\\n     * @param schema e.g., \\\"transcript\\\", \\\"certificate\\\"\\r\\n     * @param metadataURI pointer to Azure/IPFS (no PII)\\r\\n     */\\r\\n    function issueCredential(\\r\\n        address student,\\r\\n        bytes32 docHash,\\r\\n        string calldata schema,\\r\\n        string calldata metadataURI\\r\\n    )\\r\\n        external\\r\\n        whenNotPaused\\r\\n        onlyRole(ISSUER_ROLE)\\r\\n        returns (bytes32 credentialId)\\r\\n    {\\r\\n        // Enhanced input validation with custom errors\\r\\n        if (student == address(0)) revert CredentialRegistry__InvalidStudent();\\r\\n        if (docHash == bytes32(0)) revert CredentialRegistry__InvalidDocHash();\\r\\n        if (bytes(schema).length == 0) revert CredentialRegistry__EmptySchema();\\r\\n        if (bytes(metadataURI).length == 0)\\r\\n            revert CredentialRegistry__EmptyMetadataURI();\\r\\n        \\r\\n        // Check if document was previously revoked by THIS issuer only\\r\\n        if (issuerRevokedDocHashes[msg.sender][docHash])\\r\\n            revert CredentialRegistry__DocumentPreviouslyRevoked();\\r\\n        \\r\\n        // Check if document is already issued by ANY issuer\\r\\n        if (docHashToId[docHash] != bytes32(0))\\r\\n            revert CredentialRegistry__CredentialAlreadyIssued();\\r\\n\\r\\n        // Create unique credential ID using counter to prevent collisions\\r\\n        _credentialCounter++;\\r\\n        credentialId = keccak256(\\r\\n            abi.encodePacked(msg.sender, student, docHash, _credentialCounter)\\r\\n        );\\r\\n\\r\\n        // Store credential\\r\\n        credentials[credentialId] = Credential({\\r\\n            student: student,\\r\\n            issuer: msg.sender,\\r\\n            docHash: docHash,\\r\\n            schema: schema,\\r\\n            metadataURI: metadataURI,\\r\\n            issuedAt: uint64(block.timestamp),\\r\\n            revoked: false\\r\\n        });\\r\\n\\r\\n        // Update mappings\\r\\n        docHashToId[docHash] = credentialId;\\r\\n        \\r\\n        // Add to student's credentials using pagination-friendly structure\\r\\n        uint256 studentIndex = studentCredentialCount[student];\\r\\n        studentCredentialByIndex[student][studentIndex] = credentialId;\\r\\n        credentialToStudentIndex[credentialId] = studentIndex;\\r\\n        studentCredentialCount[student]++;\\r\\n\\r\\n        // Add to issuer's credentials using pagination-friendly structure\\r\\n        uint256 issuerIndex = issuerCredentialCount[msg.sender];\\r\\n        issuerCredentialByIndex[msg.sender][issuerIndex] = credentialId;\\r\\n        credentialToIssuerIndex[credentialId] = issuerIndex;\\r\\n        issuerCredentialCount[msg.sender]++;\\r\\n\\r\\n        emit CredentialIssued(\\r\\n            credentialId,\\r\\n            student,\\r\\n            msg.sender,\\r\\n            docHash,\\r\\n            schema,\\r\\n            metadataURI\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Revoke a credential (only by original issuer)\\r\\n     * @param credentialId The credential to revoke\\r\\n     * @param reason Reason for revocation\\r\\n     */\\r\\n    function revokeCredential(\\r\\n        bytes32 credentialId,\\r\\n        string calldata reason\\r\\n    ) external whenNotPaused {\\r\\n        Credential storage cred = credentials[credentialId];\\r\\n        if (cred.issuer == address(0))\\r\\n            revert CredentialRegistry__CredentialNotFound();\\r\\n        \\r\\n        // Only allow the original issuer to revoke their own credentials\\r\\n        if (msg.sender != cred.issuer)\\r\\n            revert CredentialRegistry__NotAuthorized();\\r\\n        \\r\\n        if (cred.revoked) revert CredentialRegistry__AlreadyRevoked();\\r\\n\\r\\n        cred.revoked = true;\\r\\n\\r\\n        // Mark the document hash as revoked only for this issuer\\r\\n        issuerRevokedDocHashes[cred.issuer][cred.docHash] = true;\\r\\n\\r\\n        emit CredentialRevoked(credentialId, msg.sender, cred.docHash, reason);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Initiate emergency revocation (with timelock for admin safety)\\r\\n     * @param credentialId The credential to revoke\\r\\n     * @param reason Reason for emergency revocation\\r\\n     */\\r\\n    function initiateEmergencyRevocation(\\r\\n        bytes32 credentialId,\\r\\n        string calldata reason\\r\\n    ) external onlyRole(EMERGENCY_ADMIN_ROLE) {\\r\\n        Credential storage cred = credentials[credentialId];\\r\\n        if (cred.issuer == address(0))\\r\\n            revert CredentialRegistry__CredentialNotFound();\\r\\n        if (cred.revoked) revert CredentialRegistry__AlreadyRevoked();\\r\\n\\r\\n        bytes32 emergencyId = keccak256(\\r\\n            abi.encodePacked(credentialId, block.timestamp, msg.sender)\\r\\n        );\\r\\n\\r\\n        emergencyRevocations[emergencyId] = EmergencyRevocation({\\r\\n            credentialId: credentialId,\\r\\n            timestamp: block.timestamp,\\r\\n            reason: reason,\\r\\n            executed: false\\r\\n        });\\r\\n\\r\\n        emit EmergencyRevocationInitiated(emergencyId, credentialId, msg.sender, reason);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Execute emergency revocation after timelock period\\r\\n     * @param emergencyId The emergency revocation ID\\r\\n     */\\r\\n    function executeEmergencyRevocation(\\r\\n        bytes32 emergencyId\\r\\n    ) external onlyRole(EMERGENCY_ADMIN_ROLE) {\\r\\n        EmergencyRevocation storage emergency = emergencyRevocations[emergencyId];\\r\\n        if (emergency.timestamp == 0)\\r\\n            revert CredentialRegistry__NoEmergencyRevocationPending();\\r\\n        if (emergency.executed)\\r\\n            revert CredentialRegistry__AlreadyRevoked();\\r\\n        if (block.timestamp < emergency.timestamp + EMERGENCY_TIMELOCK)\\r\\n            revert CredentialRegistry__TimelockNotExpired();\\r\\n\\r\\n        Credential storage cred = credentials[emergency.credentialId];\\r\\n        if (cred.revoked) revert CredentialRegistry__AlreadyRevoked();\\r\\n\\r\\n        cred.revoked = true;\\r\\n        emergency.executed = true;\\r\\n\\r\\n        // Mark as revoked by the original issuer to prevent re-issuance\\r\\n        issuerRevokedDocHashes[cred.issuer][cred.docHash] = true;\\r\\n\\r\\n        emit EmergencyRevocationExecuted(emergencyId, emergency.credentialId);\\r\\n        emit CredentialRevoked(emergency.credentialId, msg.sender, cred.docHash, emergency.reason);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Cancel pending emergency revocation\\r\\n     * @param emergencyId The emergency revocation ID\\r\\n     */\\r\\n    function cancelEmergencyRevocation(\\r\\n        bytes32 emergencyId\\r\\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        EmergencyRevocation storage emergency = emergencyRevocations[emergencyId];\\r\\n        if (emergency.timestamp == 0)\\r\\n            revert CredentialRegistry__NoEmergencyRevocationPending();\\r\\n        if (emergency.executed)\\r\\n            revert CredentialRegistry__AlreadyRevoked();\\r\\n\\r\\n        delete emergencyRevocations[emergencyId];\\r\\n        emit EmergencyRevocationCancelled(emergencyId, emergency.credentialId);\\r\\n    }\\r\\n\\r\\n    function getCredentialByHash(\\r\\n        bytes32 docHash\\r\\n    ) external view returns (Credential memory cred, bytes32 credentialId) {\\r\\n        credentialId = docHashToId[docHash];\\r\\n        cred = credentials[credentialId];\\r\\n    }\\r\\n\\r\\n    function isValid(bytes32 docHash) external view returns (bool) {\\r\\n        bytes32 id = docHashToId[docHash];\\r\\n        if (id == bytes32(0)) return false;\\r\\n        return !credentials[id].revoked;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get student credentials with pagination\\r\\n     * @param student Student address\\r\\n     * @param offset Starting index\\r\\n     * @param limit Maximum number of items to return (max 100)\\r\\n     * @return credentialIds Array of credential IDs\\r\\n     * @return totalCount Total number of credentials for this student\\r\\n     */\\r\\n    function getStudentCredentials(\\r\\n        address student,\\r\\n        uint256 offset,\\r\\n        uint256 limit\\r\\n    ) external view returns (bytes32[] memory credentialIds, uint256 totalCount) {\\r\\n        if (student == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        if (limit == 0 || limit > MAX_PAGINATION_LIMIT) \\r\\n            revert CredentialRegistry__InvalidPagination();\\r\\n\\r\\n        totalCount = studentCredentialCount[student];\\r\\n        \\r\\n        if (offset >= totalCount) {\\r\\n            return (new bytes32[](0), totalCount);\\r\\n        }\\r\\n\\r\\n        uint256 end = offset + limit;\\r\\n        if (end > totalCount) {\\r\\n            end = totalCount;\\r\\n        }\\r\\n\\r\\n        uint256 resultLength = end - offset;\\r\\n        credentialIds = new bytes32[](resultLength);\\r\\n\\r\\n        for (uint256 i = 0; i < resultLength; i++) {\\r\\n            credentialIds[i] = studentCredentialByIndex[student][offset + i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get issuer credentials with pagination  \\r\\n     * @param issuer Issuer address\\r\\n     * @param offset Starting index\\r\\n     * @param limit Maximum number of items to return (max 100)\\r\\n     * @return credentialIds Array of credential IDs\\r\\n     * @return totalCount Total number of credentials for this issuer\\r\\n     */\\r\\n    function getIssuerCredentials(\\r\\n        address issuer,\\r\\n        uint256 offset,\\r\\n        uint256 limit\\r\\n    ) external view returns (bytes32[] memory credentialIds, uint256 totalCount) {\\r\\n        if (issuer == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        if (limit == 0 || limit > MAX_PAGINATION_LIMIT)\\r\\n            revert CredentialRegistry__InvalidPagination();\\r\\n\\r\\n        totalCount = issuerCredentialCount[issuer];\\r\\n        \\r\\n        if (offset >= totalCount) {\\r\\n            return (new bytes32[](0), totalCount);\\r\\n        }\\r\\n\\r\\n        uint256 end = offset + limit;\\r\\n        if (end > totalCount) {\\r\\n            end = totalCount;\\r\\n        }\\r\\n\\r\\n        uint256 resultLength = end - offset;\\r\\n        credentialIds = new bytes32[](resultLength);\\r\\n\\r\\n        for (uint256 i = 0; i < resultLength; i++) {\\r\\n            credentialIds[i] = issuerCredentialByIndex[issuer][offset + i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get student credential count\\r\\n     * @param student Student address\\r\\n     * @return Number of credentials for student\\r\\n     */\\r\\n    function getStudentCredentialCount(address student) external view returns (uint256) {\\r\\n        if (student == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        return studentCredentialCount[student];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get issuer credential count\\r\\n     * @param issuer Issuer address  \\r\\n     * @return Number of credentials for issuer\\r\\n     */\\r\\n    function getIssuerCredentialCount(address issuer) external view returns (uint256) {\\r\\n        if (issuer == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        return issuerCredentialCount[issuer];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Check if an address has issuer role\\r\\n     * @param account Address to check\\r\\n     * @return True if account has issuer role\\r\\n     */\\r\\n    function isIssuer(address account) external view returns (bool) {\\r\\n        return hasRole(ISSUER_ROLE, account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get total number of credentials issued\\r\\n     * @return Total credential count\\r\\n     */\\r\\n    function getTotalCredentials() external view returns (uint256) {\\r\\n        return _credentialCounter;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get credential by ID\\r\\n     * @param credentialId The credential ID\\r\\n     * @return The credential data\\r\\n     */\\r\\n    function getCredential(\\r\\n        bytes32 credentialId\\r\\n    ) external view returns (Credential memory) {\\r\\n        Credential memory cred = credentials[credentialId];\\r\\n        if (cred.issuer == address(0))\\r\\n            revert CredentialRegistry__CredentialNotFound();\\r\\n        return cred;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Check if a document hash is revoked by a specific issuer\\r\\n     * @param issuer The issuer address\\r\\n     * @param docHash The document hash\\r\\n     * @return True if revoked by this issuer\\r\\n     */\\r\\n    function isDocHashRevokedByIssuer(\\r\\n        address issuer,\\r\\n        bytes32 docHash\\r\\n    ) external view returns (bool) {\\r\\n        return issuerRevokedDocHashes[issuer][docHash];\\r\\n    }\\r\\n\\r\\n    // Admin: add/remove authorized issuers (schools)\\r\\n    function addIssuer(address issuer) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        if (issuer == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        _grantRole(ISSUER_ROLE, issuer);\\r\\n    }\\r\\n\\r\\n    function removeIssuer(\\r\\n        address issuer\\r\\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        if (issuer == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        _revokeRole(ISSUER_ROLE, issuer);\\r\\n    }\\r\\n\\r\\n    // Emergency admin management\\r\\n    function addEmergencyAdmin(address admin) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        if (admin == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        _grantRole(EMERGENCY_ADMIN_ROLE, admin);\\r\\n    }\\r\\n\\r\\n    function removeEmergencyAdmin(address admin) external onlyRole(DEFAULT_ADMIN_ROLE) {\\r\\n        if (admin == address(0)) revert CredentialRegistry__InvalidAddress();\\r\\n        _revokeRole(EMERGENCY_ADMIN_ROLE, admin);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xfc7d2bceec599b1b4f6e098eab279cbb12a2766bf35d43b6c36f4f8cecee07fe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161454a38038061454a833981810160405281019061003291906102b5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610098576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6100ab6000801b826100e360201b60201c565b506100dc7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a63826100e360201b60201c565b50506102e2565b60006100f583836101e060201b60201c565b6101d557600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061017261024a60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101da565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028282610257565b9050919050565b61029281610277565b811461029d57600080fd5b50565b6000815190506102af81610289565b92915050565b6000602082840312156102cb576102ca610252565b5b60006102d9848285016102a0565b91505092915050565b614259806102f16000396000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c80635f1588bd11610151578063a217fddf116100c3578063d1be488311610087578063d1be48831461080f578063d547741f1461083f578063ddb6dbd61461085b578063de542d2e1461088c578063f1470a35146108a8578063ff6acade146108c657610269565b8063a217fddf1461072e578063a219550f1461074c578063acb68f011461077c578063b71e9882146107ac578063bb57fe8e146107dc57610269565b80637a9a93f4116101155780637a9a93f41461065a57806382aefa24146106765780638456cb5914610694578063877b9a671461069e57806391d14854146106ce5780639c353f19146106fe57610269565b80635f1588bd1461058d57806360d7442b146105be5780636a938567146105dc5780636e76fc8f1461060c57806376be45751461062a57610269565b806323ca4a28116101ea57806336568abe116101ae57806336568abe146104e15780633f4ba83a146104fd57806347bc709314610507578063486683bd14610523578063493814b5146105535780635c975abb1461056f57610269565b806323ca4a2814610413578063248a9ca314610443578063299d0348146104735780632e8a7057146104a95780632f2ff15d146104c557610269565b806312c9c6c31161023157806312c9c6c31461034a578063179efb091461037a5780631c7b75dd1461039657806320694db0146103c657806321303ebb146103e257610269565b806301ffc9a71461026e5780630291c4591461029e5780630843d299146102ce5780630d17a1d1146102fe578063125fd0471461032e575b600080fd5b610288600480360381019061028391906132e1565b6108e4565b6040516102959190613329565b60405180910390f35b6102b860048036038101906102b3919061337a565b61095e565b6040516102c591906133c0565b60405180910390f35b6102e860048036038101906102e3919061337a565b610976565b6040516102f591906133ea565b60405180910390f35b61031860048036038101906103139190613463565b61098e565b6040516103259190613329565b60405180910390f35b61034860048036038101906103439190613508565b6109f6565b005b610364600480360381019061035f9190613594565b610c5b565b60405161037191906133ea565b60405180910390f35b610394600480360381019061038f91906135d4565b610c80565b005b6103b060048036038101906103ab91906135d4565b610d22565b6040516103bd91906133c0565b60405180910390f35b6103e060048036038101906103db91906135d4565b610d3a565b005b6103fc60048036038101906103f79190613601565b610ddc565b60405161040a929190613712565b60405180910390f35b61042d60048036038101906104289190613463565b61103b565b60405161043a9190613329565b60405180910390f35b61045d6004803603810190610458919061337a565b61106a565b60405161046a91906133ea565b60405180910390f35b61048d6004803603810190610488919061337a565b611089565b6040516104a09796959493929190613804565b60405180910390f35b6104c360048036038101906104be919061337a565b61123c565b005b6104df60048036038101906104da9190613881565b611513565b005b6104fb60048036038101906104f69190613881565b611535565b005b6105056115b0565b005b610521600480360381019061051c91906135d4565b6115c8565b005b61053d6004803603810190610538919061337a565b61166a565b60405161054a91906133c0565b60405180910390f35b61056d60048036038101906105689190613508565b611682565b005b610577611908565b6040516105849190613329565b60405180910390f35b6105a760048036038101906105a29190613601565b61191f565b6040516105b5929190613712565b60405180910390f35b6105c6611b7e565b6040516105d391906133c0565b60405180910390f35b6105f660048036038101906105f1919061337a565b611b85565b6040516106039190613329565b60405180910390f35b610614611be0565b60405161062191906133ea565b60405180910390f35b610644600480360381019061063f91906135d4565b611c04565b60405161065191906133c0565b60405180910390f35b610674600480360381019061066f91906135d4565b611c1c565b005b61067e611cbe565b60405161068b91906133ea565b60405180910390f35b61069c611ce2565b005b6106b860048036038101906106b391906135d4565b611cfa565b6040516106c59190613329565b60405180910390f35b6106e860048036038101906106e39190613881565b611d2d565b6040516106f59190613329565b60405180910390f35b610718600480360381019061071391906135d4565b611d97565b60405161072591906133c0565b60405180910390f35b610736611e45565b60405161074391906133ea565b60405180910390f35b610766600480360381019061076191906138c1565b611e4c565b60405161077391906133ea565b60405180910390f35b61079660048036038101906107919190613594565b612585565b6040516107a391906133ea565b60405180910390f35b6107c660048036038101906107c191906135d4565b6125aa565b6040516107d391906133c0565b60405180910390f35b6107f660048036038101906107f1919061337a565b612658565b6040516108069493929190613968565b60405180910390f35b6108296004803603810190610824919061337a565b61271d565b6040516108369190613ace565b60405180910390f35b61085960048036038101906108549190613881565b6129e1565b005b6108756004803603810190610870919061337a565b612a03565b604051610883929190613af0565b60405180910390f35b6108a660048036038101906108a1919061337a565b612c6f565b005b6108b0612d9b565b6040516108bd91906133c0565b60405180910390f35b6108ce612da5565b6040516108db91906133c0565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610957575061095682612daa565b5b9050919050565b600a6020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a63610a2081612e14565b6000600260008681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ac1576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160089054906101000a900460ff1615610b0a576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000854233604051602001610b2193929190613baa565b604051602081830303815290604052805190602001209050604051806080016040528087815260200142815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200160001515815250600b600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081610bdd9190613e22565b5060608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff1686827fb528dd4389ccece850dbc4237e6437d4535deba7fc1be7424011f31e41b193288888604051610c4b929190613f30565b60405180910390a4505050505050565b6008602052816000526040600020602052806000526040600020600091509150505481565b6000801b610c8d81612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf3576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d1d7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6383612e28565b505050565b60066020528060005260406000206000915090505481565b6000801b610d4781612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dad576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dd77f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283612e28565b505050565b606060008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e45576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000831480610e545750606483115b15610e8b576040517fe7dddf4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808410610f2557600067ffffffffffffffff811115610eef57610eee613be7565b5b604051908082528060200260200182016040528015610f1d5781602001602082028036833780820191505090505b509150611033565b60008385610f339190613f83565b905081811115610f41578190505b60008582610f4f9190613fb7565b90508067ffffffffffffffff811115610f6b57610f6a613be7565b5b604051908082528060200260200182016040528015610f995781602001602082028036833780820191505090505b50935060005b8181101561102f57600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008289610ff49190613f83565b81526020019081526020016000205485828151811061101657611015613feb565b5b6020026020010181815250508080600101915050610f9f565b5050505b935093915050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806000838152602001908152602001600020600101549050919050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030180546110fe90613c45565b80601f016020809104026020016040519081016040528092919081815260200182805461112a90613c45565b80156111775780601f1061114c57610100808354040283529160200191611177565b820191906000526020600020905b81548152906001019060200180831161115a57829003601f168201915b50505050509080600401805461118c90613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546111b890613c45565b80156112055780601f106111da57610100808354040283529160200191611205565b820191906000526020600020905b8154815290600101906020018083116111e857829003601f168201915b5050505050908060050160009054906101000a900467ffffffffffffffff16908060050160089054906101000a900460ff16905087565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6361126681612e14565b6000600b6000848152602001908152602001600020905060008160010154036112bb576040517f19c4236f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900460ff1615611304576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62093a8081600101546113179190613f83565b421015611350576040517fb6009b6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008360000154815260200190815260200160002090508060050160089054906101000a900460ff16156113b4576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160086101000a81548160ff02191690831515021790555060018260030160006101000a81548160ff0219169083151502179055506001600460008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360020154815260200190815260200160002060006101000a81548160ff0219169083151502179055508160000154847f74d4c2105c9d7e174bee55311df991752575383776967f7140e310040f21ee8360405160405180910390a33373ffffffffffffffffffffffffffffffffffffffff1682600001547f8a0c4fdd9c910f033ae5add53572682b98f8d54b2af4ba7a22a41fb60969c37683600201548560020160405161150592919061409e565b60405180910390a350505050565b61151c8261106a565b61152581612e14565b61152f8383612e28565b50505050565b61153d612f19565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115a1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115ab8282612f21565b505050565b6000801b6115bd81612e14565b6115c5613013565b50565b6000801b6115d581612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361163b576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116657f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283612f21565b505050565b60096020528060005260406000206000915090505481565b61168a613076565b6000600260008581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361172b576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117b4576040517f2451dbbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160089054906101000a900460ff16156117fd576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160086101000a81548160ff0219169083151502179055506001600460008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360020154815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16847f8a0c4fdd9c910f033ae5add53572682b98f8d54b2af4ba7a22a41fb60969c376836002015486866040516118fa939291906140ce565b60405180910390a350505050565b6000600160009054906101000a900460ff16905090565b606060008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611988576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008314806119975750606483115b156119ce576040517fe7dddf4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808410611a6857600067ffffffffffffffff811115611a3257611a31613be7565b5b604051908082528060200260200182016040528015611a605781602001602082028036833780820191505090505b509150611b76565b60008385611a769190613f83565b905081811115611a84578190505b60008582611a929190613fb7565b90508067ffffffffffffffff811115611aae57611aad613be7565b5b604051908082528060200260200182016040528015611adc5781602001602082028036833780820191505090505b50935060005b81811015611b7257600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008289611b379190613f83565b815260200190815260200160002054858281518110611b5957611b58613feb565b5b6020026020010181815250508080600101915050611ae2565b5050505b935093915050565b62093a8081565b600080600360008481526020019081526020016000205490506000801b8103611bb2576000915050611bdb565b6002600082815260200190815260200160002060050160089054906101000a900460ff16159150505b919050565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6381565b60056020528060005260406000206000915090505481565b6000801b611c2981612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c8f576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cb97f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6383612f21565b505050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12281565b6000801b611cef81612e14565b611cf76130b7565b50565b6000611d267f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283611d2d565b9050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dfe576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b81565b6000611e56613076565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122611e8081612e14565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603611ee6576040517fe2d4aa1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b8703611f22576040517f85378e2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686905003611f5f576040517fb52cff0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484905003611f9c576040517ffcf5226200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060009054906101000a900460ff1615612031576040517f6d29a84800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b600360008981526020019081526020016000205414612080576040517fdb40fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600c600081548092919061209390614100565b9190505550338888600c546040516020016120b19493929190614148565b6040516020818303038152906040528051906020012091506040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014267ffffffffffffffff168152602001600015158152506002600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908161227d9190613e22565b5060808201518160040190816122939190613e22565b5060a08201518160050160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060c08201518160050160086101000a81548160ff0219169083151502179055509050508160036000898152602001908152602001600020819055506000600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600085815260200190815260200160002081905550600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123ff90614100565b91905055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000208190555080600a600086815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061250590614100565b91905055503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16857fcd7e626e73eebce5228b09eedfb480e46c184b106eefc953626e3e7be0045e348c8c8c8c8c604051612570959493929190614196565b60405180910390a45050509695505050505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612611576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60205280600052604060002060009150905080600001549080600101549080600201805461268790613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546126b390613c45565b80156127005780601f106126d557610100808354040283529160200191612700565b820191906000526020600020905b8154815290600101906020018083116126e357829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6127256131aa565b6000600260008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461280b90613c45565b80601f016020809104026020016040519081016040528092919081815260200182805461283790613c45565b80156128845780601f1061285957610100808354040283529160200191612884565b820191906000526020600020905b81548152906001019060200180831161286757829003601f168201915b5050505050815260200160048201805461289d90613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546128c990613c45565b80156129165780601f106128eb57610100808354040283529160200191612916565b820191906000526020600020905b8154815290600101906020018083116128f957829003601f168201915b505050505081526020016005820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016005820160089054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036129d8576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6129ea8261106a565b6129f381612e14565b6129fd8383612f21565b50505050565b612a0b6131aa565b600060036000848152602001908152602001600020549050600260008281526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054612b0790613c45565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3390613c45565b8015612b805780601f10612b5557610100808354040283529160200191612b80565b820191906000526020600020905b815481529060010190602001808311612b6357829003601f168201915b50505050508152602001600482018054612b9990613c45565b80601f0160208091040260200160405190810160405280929190818152602001828054612bc590613c45565b8015612c125780601f10612be757610100808354040283529160200191612c12565b820191906000526020600020905b815481529060010190602001808311612bf557829003601f168201915b505050505081526020016005820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016005820160089054906101000a900460ff1615151515815250509150915091565b6000801b612c7c81612e14565b6000600b600084815260200190815260200160002090506000816001015403612cd1576040517f19c4236f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900460ff1615612d1a576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60008481526020019081526020016000206000808201600090556001820160009055600282016000612d4e9190613222565b6003820160006101000a81549060ff021916905550508060000154837f51ea1d9e2794f348ea9b86ed88f5f2cdf2e8a8198ae23842a240c25304d52c0f60405160405180910390a3505050565b6000600c54905090565b606481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612e2581612e20612f19565b613119565b50565b6000612e348383611d2d565b612f0e57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612eab612f19565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050612f13565b600090505b92915050565b600033905090565b6000612f2d8383611d2d565b1561300857600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612fa5612f19565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061300d565b600090505b92915050565b61301b61316a565b6000600160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61305f612f19565b60405161306c91906141df565b60405180910390a1565b61307e611908565b156130b5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6130bf613076565b60018060006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613102612f19565b60405161310f91906141df565b60405180910390a1565b6131238282611d2d565b6131665780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161315d9291906141fa565b60405180910390fd5b5050565b613172611908565b6131a8576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016060815260200160608152602001600067ffffffffffffffff1681526020016000151581525090565b50805461322e90613c45565b6000825580601f10613240575061325f565b601f01602090049060005260206000209081019061325e9190613262565b5b50565b5b8082111561327b576000816000905550600101613263565b5090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6132be81613289565b81146132c957600080fd5b50565b6000813590506132db816132b5565b92915050565b6000602082840312156132f7576132f661327f565b5b6000613305848285016132cc565b91505092915050565b60008115159050919050565b6133238161330e565b82525050565b600060208201905061333e600083018461331a565b92915050565b6000819050919050565b61335781613344565b811461336257600080fd5b50565b6000813590506133748161334e565b92915050565b6000602082840312156133905761338f61327f565b5b600061339e84828501613365565b91505092915050565b6000819050919050565b6133ba816133a7565b82525050565b60006020820190506133d560008301846133b1565b92915050565b6133e481613344565b82525050565b60006020820190506133ff60008301846133db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061343082613405565b9050919050565b61344081613425565b811461344b57600080fd5b50565b60008135905061345d81613437565b92915050565b6000806040838503121561347a5761347961327f565b5b60006134888582860161344e565b925050602061349985828601613365565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126134c8576134c76134a3565b5b8235905067ffffffffffffffff8111156134e5576134e46134a8565b5b602083019150836001820283011115613501576135006134ad565b5b9250929050565b6000806000604084860312156135215761352061327f565b5b600061352f86828701613365565b935050602084013567ffffffffffffffff8111156135505761354f613284565b5b61355c868287016134b2565b92509250509250925092565b613571816133a7565b811461357c57600080fd5b50565b60008135905061358e81613568565b92915050565b600080604083850312156135ab576135aa61327f565b5b60006135b98582860161344e565b92505060206135ca8582860161357f565b9150509250929050565b6000602082840312156135ea576135e961327f565b5b60006135f88482850161344e565b91505092915050565b60008060006060848603121561361a5761361961327f565b5b60006136288682870161344e565b93505060206136398682870161357f565b925050604061364a8682870161357f565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61368981613344565b82525050565b600061369b8383613680565b60208301905092915050565b6000602082019050919050565b60006136bf82613654565b6136c9818561365f565b93506136d483613670565b8060005b838110156137055781516136ec888261368f565b97506136f7836136a7565b9250506001810190506136d8565b5085935050505092915050565b6000604082019050818103600083015261372c81856136b4565b905061373b60208301846133b1565b9392505050565b61374b81613425565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561378b578082015181840152602081019050613770565b60008484015250505050565b6000601f19601f8301169050919050565b60006137b382613751565b6137bd818561375c565b93506137cd81856020860161376d565b6137d681613797565b840191505092915050565b600067ffffffffffffffff82169050919050565b6137fe816137e1565b82525050565b600060e082019050613819600083018a613742565b6138266020830189613742565b61383360408301886133db565b818103606083015261384581876137a8565b9050818103608083015261385981866137a8565b905061386860a08301856137f5565b61387560c083018461331a565b98975050505050505050565b600080604083850312156138985761389761327f565b5b60006138a685828601613365565b92505060206138b78582860161344e565b9150509250929050565b600080600080600080608087890312156138de576138dd61327f565b5b60006138ec89828a0161344e565b96505060206138fd89828a01613365565b955050604087013567ffffffffffffffff81111561391e5761391d613284565b5b61392a89828a016134b2565b9450945050606087013567ffffffffffffffff81111561394d5761394c613284565b5b61395989828a016134b2565b92509250509295509295509295565b600060808201905061397d60008301876133db565b61398a60208301866133b1565b818103604083015261399c81856137a8565b90506139ab606083018461331a565b95945050505050565b6139bd81613425565b82525050565b600082825260208201905092915050565b60006139df82613751565b6139e981856139c3565b93506139f981856020860161376d565b613a0281613797565b840191505092915050565b613a16816137e1565b82525050565b613a258161330e565b82525050565b600060e083016000830151613a4360008601826139b4565b506020830151613a5660208601826139b4565b506040830151613a696040860182613680565b5060608301518482036060860152613a8182826139d4565b91505060808301518482036080860152613a9b82826139d4565b91505060a0830151613ab060a0860182613a0d565b5060c0830151613ac360c0860182613a1c565b508091505092915050565b60006020820190508181036000830152613ae88184613a2b565b905092915050565b60006040820190508181036000830152613b0a8185613a2b565b9050613b1960208301846133db565b9392505050565b6000819050919050565b613b3b613b3682613344565b613b20565b82525050565b6000819050919050565b613b5c613b57826133a7565b613b41565b82525050565b60008160601b9050919050565b6000613b7a82613b62565b9050919050565b6000613b8c82613b6f565b9050919050565b613ba4613b9f82613425565b613b81565b82525050565b6000613bb68286613b2a565b602082019150613bc68285613b4b565b602082019150613bd68284613b93565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613c5d57607f821691505b602082108103613c7057613c6f613c16565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613cd87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613c9b565b613ce28683613c9b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613d1f613d1a613d15846133a7565b613cfa565b6133a7565b9050919050565b6000819050919050565b613d3983613d04565b613d4d613d4582613d26565b848454613ca8565b825550505050565b600090565b613d62613d55565b613d6d818484613d30565b505050565b5b81811015613d9157613d86600082613d5a565b600181019050613d73565b5050565b601f821115613dd657613da781613c76565b613db084613c8b565b81016020851015613dbf578190505b613dd3613dcb85613c8b565b830182613d72565b50505b505050565b600082821c905092915050565b6000613df960001984600802613ddb565b1980831691505092915050565b6000613e128383613de8565b9150826002028217905092915050565b613e2b82613751565b67ffffffffffffffff811115613e4457613e43613be7565b5b613e4e8254613c45565b613e59828285613d95565b600060209050601f831160018114613e8c5760008415613e7a578287015190505b613e848582613e06565b865550613eec565b601f198416613e9a86613c76565b60005b82811015613ec257848901518255600182019150602085019450602081019050613e9d565b86831015613edf5784890151613edb601f891682613de8565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000613f0f838561375c565b9350613f1c838584613ef4565b613f2583613797565b840190509392505050565b60006020820190508181036000830152613f4b818486613f03565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f8e826133a7565b9150613f99836133a7565b9250828201905080821115613fb157613fb0613f54565b5b92915050565b6000613fc2826133a7565b9150613fcd836133a7565b9250828203905081811115613fe557613fe4613f54565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815461402781613c45565b614031818661375c565b9450600182166000811461404c576001811461406257614095565b60ff198316865281151560200286019350614095565b61406b85613c76565b60005b8381101561408d5781548189015260018201915060208101905061406e565b808801955050505b50505092915050565b60006040820190506140b360008301856133db565b81810360208301526140c5818461401a565b90509392505050565b60006040820190506140e360008301866133db565b81810360208301526140f6818486613f03565b9050949350505050565b600061410b826133a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361413d5761413c613f54565b5b600182019050919050565b60006141548287613b93565b6014820191506141648286613b93565b6014820191506141748285613b2a565b6020820191506141848284613b4b565b60208201915081905095945050505050565b60006060820190506141ab60008301886133db565b81810360208301526141be818688613f03565b905081810360408301526141d3818486613f03565b90509695505050505050565b60006020820190506141f46000830184613742565b92915050565b600060408201905061420f6000830185613742565b61421c60208301846133db565b939250505056fea26469706673582212209e5eef12751af6877a53034934260876a1955960207742a27cfb057853dc101864736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102695760003560e01c80635f1588bd11610151578063a217fddf116100c3578063d1be488311610087578063d1be48831461080f578063d547741f1461083f578063ddb6dbd61461085b578063de542d2e1461088c578063f1470a35146108a8578063ff6acade146108c657610269565b8063a217fddf1461072e578063a219550f1461074c578063acb68f011461077c578063b71e9882146107ac578063bb57fe8e146107dc57610269565b80637a9a93f4116101155780637a9a93f41461065a57806382aefa24146106765780638456cb5914610694578063877b9a671461069e57806391d14854146106ce5780639c353f19146106fe57610269565b80635f1588bd1461058d57806360d7442b146105be5780636a938567146105dc5780636e76fc8f1461060c57806376be45751461062a57610269565b806323ca4a28116101ea57806336568abe116101ae57806336568abe146104e15780633f4ba83a146104fd57806347bc709314610507578063486683bd14610523578063493814b5146105535780635c975abb1461056f57610269565b806323ca4a2814610413578063248a9ca314610443578063299d0348146104735780632e8a7057146104a95780632f2ff15d146104c557610269565b806312c9c6c31161023157806312c9c6c31461034a578063179efb091461037a5780631c7b75dd1461039657806320694db0146103c657806321303ebb146103e257610269565b806301ffc9a71461026e5780630291c4591461029e5780630843d299146102ce5780630d17a1d1146102fe578063125fd0471461032e575b600080fd5b610288600480360381019061028391906132e1565b6108e4565b6040516102959190613329565b60405180910390f35b6102b860048036038101906102b3919061337a565b61095e565b6040516102c591906133c0565b60405180910390f35b6102e860048036038101906102e3919061337a565b610976565b6040516102f591906133ea565b60405180910390f35b61031860048036038101906103139190613463565b61098e565b6040516103259190613329565b60405180910390f35b61034860048036038101906103439190613508565b6109f6565b005b610364600480360381019061035f9190613594565b610c5b565b60405161037191906133ea565b60405180910390f35b610394600480360381019061038f91906135d4565b610c80565b005b6103b060048036038101906103ab91906135d4565b610d22565b6040516103bd91906133c0565b60405180910390f35b6103e060048036038101906103db91906135d4565b610d3a565b005b6103fc60048036038101906103f79190613601565b610ddc565b60405161040a929190613712565b60405180910390f35b61042d60048036038101906104289190613463565b61103b565b60405161043a9190613329565b60405180910390f35b61045d6004803603810190610458919061337a565b61106a565b60405161046a91906133ea565b60405180910390f35b61048d6004803603810190610488919061337a565b611089565b6040516104a09796959493929190613804565b60405180910390f35b6104c360048036038101906104be919061337a565b61123c565b005b6104df60048036038101906104da9190613881565b611513565b005b6104fb60048036038101906104f69190613881565b611535565b005b6105056115b0565b005b610521600480360381019061051c91906135d4565b6115c8565b005b61053d6004803603810190610538919061337a565b61166a565b60405161054a91906133c0565b60405180910390f35b61056d60048036038101906105689190613508565b611682565b005b610577611908565b6040516105849190613329565b60405180910390f35b6105a760048036038101906105a29190613601565b61191f565b6040516105b5929190613712565b60405180910390f35b6105c6611b7e565b6040516105d391906133c0565b60405180910390f35b6105f660048036038101906105f1919061337a565b611b85565b6040516106039190613329565b60405180910390f35b610614611be0565b60405161062191906133ea565b60405180910390f35b610644600480360381019061063f91906135d4565b611c04565b60405161065191906133c0565b60405180910390f35b610674600480360381019061066f91906135d4565b611c1c565b005b61067e611cbe565b60405161068b91906133ea565b60405180910390f35b61069c611ce2565b005b6106b860048036038101906106b391906135d4565b611cfa565b6040516106c59190613329565b60405180910390f35b6106e860048036038101906106e39190613881565b611d2d565b6040516106f59190613329565b60405180910390f35b610718600480360381019061071391906135d4565b611d97565b60405161072591906133c0565b60405180910390f35b610736611e45565b60405161074391906133ea565b60405180910390f35b610766600480360381019061076191906138c1565b611e4c565b60405161077391906133ea565b60405180910390f35b61079660048036038101906107919190613594565b612585565b6040516107a391906133ea565b60405180910390f35b6107c660048036038101906107c191906135d4565b6125aa565b6040516107d391906133c0565b60405180910390f35b6107f660048036038101906107f1919061337a565b612658565b6040516108069493929190613968565b60405180910390f35b6108296004803603810190610824919061337a565b61271d565b6040516108369190613ace565b60405180910390f35b61085960048036038101906108549190613881565b6129e1565b005b6108756004803603810190610870919061337a565b612a03565b604051610883929190613af0565b60405180910390f35b6108a660048036038101906108a1919061337a565b612c6f565b005b6108b0612d9b565b6040516108bd91906133c0565b60405180910390f35b6108ce612da5565b6040516108db91906133c0565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610957575061095682612daa565b5b9050919050565b600a6020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff16905092915050565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a63610a2081612e14565b6000600260008681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610ac1576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160089054906101000a900460ff1615610b0a576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000854233604051602001610b2193929190613baa565b604051602081830303815290604052805190602001209050604051806080016040528087815260200142815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200160001515815250600b600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002019081610bdd9190613e22565b5060608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff1686827fb528dd4389ccece850dbc4237e6437d4535deba7fc1be7424011f31e41b193288888604051610c4b929190613f30565b60405180910390a4505050505050565b6008602052816000526040600020602052806000526040600020600091509150505481565b6000801b610c8d81612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf3576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d1d7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6383612e28565b505050565b60066020528060005260406000206000915090505481565b6000801b610d4781612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dad576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dd77f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283612e28565b505050565b606060008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e45576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000831480610e545750606483115b15610e8b576040517fe7dddf4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808410610f2557600067ffffffffffffffff811115610eef57610eee613be7565b5b604051908082528060200260200182016040528015610f1d5781602001602082028036833780820191505090505b509150611033565b60008385610f339190613f83565b905081811115610f41578190505b60008582610f4f9190613fb7565b90508067ffffffffffffffff811115610f6b57610f6a613be7565b5b604051908082528060200260200182016040528015610f995781602001602082028036833780820191505090505b50935060005b8181101561102f57600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008289610ff49190613f83565b81526020019081526020016000205485828151811061101657611015613feb565b5b6020026020010181815250508080600101915050610f9f565b5050505b935093915050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000806000838152602001908152602001600020600101549050919050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030180546110fe90613c45565b80601f016020809104026020016040519081016040528092919081815260200182805461112a90613c45565b80156111775780601f1061114c57610100808354040283529160200191611177565b820191906000526020600020905b81548152906001019060200180831161115a57829003601f168201915b50505050509080600401805461118c90613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546111b890613c45565b80156112055780601f106111da57610100808354040283529160200191611205565b820191906000526020600020905b8154815290600101906020018083116111e857829003601f168201915b5050505050908060050160009054906101000a900467ffffffffffffffff16908060050160089054906101000a900460ff16905087565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6361126681612e14565b6000600b6000848152602001908152602001600020905060008160010154036112bb576040517f19c4236f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900460ff1615611304576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62093a8081600101546113179190613f83565b421015611350576040517fb6009b6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008360000154815260200190815260200160002090508060050160089054906101000a900460ff16156113b4576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160086101000a81548160ff02191690831515021790555060018260030160006101000a81548160ff0219169083151502179055506001600460008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360020154815260200190815260200160002060006101000a81548160ff0219169083151502179055508160000154847f74d4c2105c9d7e174bee55311df991752575383776967f7140e310040f21ee8360405160405180910390a33373ffffffffffffffffffffffffffffffffffffffff1682600001547f8a0c4fdd9c910f033ae5add53572682b98f8d54b2af4ba7a22a41fb60969c37683600201548560020160405161150592919061409e565b60405180910390a350505050565b61151c8261106a565b61152581612e14565b61152f8383612e28565b50505050565b61153d612f19565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115a1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115ab8282612f21565b505050565b6000801b6115bd81612e14565b6115c5613013565b50565b6000801b6115d581612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361163b576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6116657f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283612f21565b505050565b60096020528060005260406000206000915090505481565b61168a613076565b6000600260008581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361172b576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117b4576040517f2451dbbd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060050160089054906101000a900460ff16156117fd576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160050160086101000a81548160ff0219169083151502179055506001600460008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360020154815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16847f8a0c4fdd9c910f033ae5add53572682b98f8d54b2af4ba7a22a41fb60969c376836002015486866040516118fa939291906140ce565b60405180910390a350505050565b6000600160009054906101000a900460ff16905090565b606060008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611988576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008314806119975750606483115b156119ce576040517fe7dddf4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808410611a6857600067ffffffffffffffff811115611a3257611a31613be7565b5b604051908082528060200260200182016040528015611a605781602001602082028036833780820191505090505b509150611b76565b60008385611a769190613f83565b905081811115611a84578190505b60008582611a929190613fb7565b90508067ffffffffffffffff811115611aae57611aad613be7565b5b604051908082528060200260200182016040528015611adc5781602001602082028036833780820191505090505b50935060005b81811015611b7257600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008289611b379190613f83565b815260200190815260200160002054858281518110611b5957611b58613feb565b5b6020026020010181815250508080600101915050611ae2565b5050505b935093915050565b62093a8081565b600080600360008481526020019081526020016000205490506000801b8103611bb2576000915050611bdb565b6002600082815260200190815260200160002060050160089054906101000a900460ff16159150505b919050565b7f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6381565b60056020528060005260406000206000915090505481565b6000801b611c2981612e14565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c8f576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611cb97f5358bcfd81d1ef3da152b1755e1c3c6739686fa7e83dbcad0071568cc4b73a6383612f21565b505050565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12281565b6000801b611cef81612e14565b611cf76130b7565b50565b6000611d267f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa12283611d2d565b9050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611dfe576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b81565b6000611e56613076565b7f114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122611e8081612e14565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603611ee6576040517fe2d4aa1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b8703611f22576040517f85378e2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008686905003611f5f576040517fb52cff0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008484905003611f9c576040517ffcf5226200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060009054906101000a900460ff1615612031576040517f6d29a84800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000801b600360008981526020019081526020016000205414612080576040517fdb40fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600c600081548092919061209390614100565b9190505550338888600c546040516020016120b19493929190614148565b6040516020818303038152906040528051906020012091506040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020014267ffffffffffffffff168152602001600015158152506002600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908161227d9190613e22565b5060808201518160040190816122939190613e22565b5060a08201518160050160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060c08201518160050160086101000a81548160ff0219169083151502179055509050508160036000898152602001908152602001600020819055506000600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600085815260200190815260200160002081905550600560008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123ff90614100565b91905055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000208190555080600a600086815260200190815260200160002081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061250590614100565b91905055503373ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16857fcd7e626e73eebce5228b09eedfb480e46c184b106eefc953626e3e7be0045e348c8c8c8c8c604051612570959493929190614196565b60405180910390a45050509695505050505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612611576040517fd74a850e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60205280600052604060002060009150905080600001549080600101549080600201805461268790613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546126b390613c45565b80156127005780601f106126d557610100808354040283529160200191612700565b820191906000526020600020905b8154815290600101906020018083116126e357829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6127256131aa565b6000600260008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461280b90613c45565b80601f016020809104026020016040519081016040528092919081815260200182805461283790613c45565b80156128845780601f1061285957610100808354040283529160200191612884565b820191906000526020600020905b81548152906001019060200180831161286757829003601f168201915b5050505050815260200160048201805461289d90613c45565b80601f01602080910402602001604051908101604052809291908181526020018280546128c990613c45565b80156129165780601f106128eb57610100808354040283529160200191612916565b820191906000526020600020905b8154815290600101906020018083116128f957829003601f168201915b505050505081526020016005820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016005820160089054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16036129d8576040517f54ef681100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6129ea8261106a565b6129f381612e14565b6129fd8383612f21565b50505050565b612a0b6131aa565b600060036000848152602001908152602001600020549050600260008281526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054612b0790613c45565b80601f0160208091040260200160405190810160405280929190818152602001828054612b3390613c45565b8015612b805780601f10612b5557610100808354040283529160200191612b80565b820191906000526020600020905b815481529060010190602001808311612b6357829003601f168201915b50505050508152602001600482018054612b9990613c45565b80601f0160208091040260200160405190810160405280929190818152602001828054612bc590613c45565b8015612c125780601f10612be757610100808354040283529160200191612c12565b820191906000526020600020905b815481529060010190602001808311612bf557829003601f168201915b505050505081526020016005820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016005820160089054906101000a900460ff1615151515815250509150915091565b6000801b612c7c81612e14565b6000600b600084815260200190815260200160002090506000816001015403612cd1576040517f19c4236f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160009054906101000a900460ff1615612d1a576040517f9008bcc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b60008481526020019081526020016000206000808201600090556001820160009055600282016000612d4e9190613222565b6003820160006101000a81549060ff021916905550508060000154837f51ea1d9e2794f348ea9b86ed88f5f2cdf2e8a8198ae23842a240c25304d52c0f60405160405180910390a3505050565b6000600c54905090565b606481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612e2581612e20612f19565b613119565b50565b6000612e348383611d2d565b612f0e57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612eab612f19565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050612f13565b600090505b92915050565b600033905090565b6000612f2d8383611d2d565b1561300857600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612fa5612f19565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061300d565b600090505b92915050565b61301b61316a565b6000600160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61305f612f19565b60405161306c91906141df565b60405180910390a1565b61307e611908565b156130b5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6130bf613076565b60018060006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258613102612f19565b60405161310f91906141df565b60405180910390a1565b6131238282611d2d565b6131665780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161315d9291906141fa565b60405180910390fd5b5050565b613172611908565b6131a8576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016060815260200160608152602001600067ffffffffffffffff1681526020016000151581525090565b50805461322e90613c45565b6000825580601f10613240575061325f565b601f01602090049060005260206000209081019061325e9190613262565b5b50565b5b8082111561327b576000816000905550600101613263565b5090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6132be81613289565b81146132c957600080fd5b50565b6000813590506132db816132b5565b92915050565b6000602082840312156132f7576132f661327f565b5b6000613305848285016132cc565b91505092915050565b60008115159050919050565b6133238161330e565b82525050565b600060208201905061333e600083018461331a565b92915050565b6000819050919050565b61335781613344565b811461336257600080fd5b50565b6000813590506133748161334e565b92915050565b6000602082840312156133905761338f61327f565b5b600061339e84828501613365565b91505092915050565b6000819050919050565b6133ba816133a7565b82525050565b60006020820190506133d560008301846133b1565b92915050565b6133e481613344565b82525050565b60006020820190506133ff60008301846133db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061343082613405565b9050919050565b61344081613425565b811461344b57600080fd5b50565b60008135905061345d81613437565b92915050565b6000806040838503121561347a5761347961327f565b5b60006134888582860161344e565b925050602061349985828601613365565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126134c8576134c76134a3565b5b8235905067ffffffffffffffff8111156134e5576134e46134a8565b5b602083019150836001820283011115613501576135006134ad565b5b9250929050565b6000806000604084860312156135215761352061327f565b5b600061352f86828701613365565b935050602084013567ffffffffffffffff8111156135505761354f613284565b5b61355c868287016134b2565b92509250509250925092565b613571816133a7565b811461357c57600080fd5b50565b60008135905061358e81613568565b92915050565b600080604083850312156135ab576135aa61327f565b5b60006135b98582860161344e565b92505060206135ca8582860161357f565b9150509250929050565b6000602082840312156135ea576135e961327f565b5b60006135f88482850161344e565b91505092915050565b60008060006060848603121561361a5761361961327f565b5b60006136288682870161344e565b93505060206136398682870161357f565b925050604061364a8682870161357f565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61368981613344565b82525050565b600061369b8383613680565b60208301905092915050565b6000602082019050919050565b60006136bf82613654565b6136c9818561365f565b93506136d483613670565b8060005b838110156137055781516136ec888261368f565b97506136f7836136a7565b9250506001810190506136d8565b5085935050505092915050565b6000604082019050818103600083015261372c81856136b4565b905061373b60208301846133b1565b9392505050565b61374b81613425565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561378b578082015181840152602081019050613770565b60008484015250505050565b6000601f19601f8301169050919050565b60006137b382613751565b6137bd818561375c565b93506137cd81856020860161376d565b6137d681613797565b840191505092915050565b600067ffffffffffffffff82169050919050565b6137fe816137e1565b82525050565b600060e082019050613819600083018a613742565b6138266020830189613742565b61383360408301886133db565b818103606083015261384581876137a8565b9050818103608083015261385981866137a8565b905061386860a08301856137f5565b61387560c083018461331a565b98975050505050505050565b600080604083850312156138985761389761327f565b5b60006138a685828601613365565b92505060206138b78582860161344e565b9150509250929050565b600080600080600080608087890312156138de576138dd61327f565b5b60006138ec89828a0161344e565b96505060206138fd89828a01613365565b955050604087013567ffffffffffffffff81111561391e5761391d613284565b5b61392a89828a016134b2565b9450945050606087013567ffffffffffffffff81111561394d5761394c613284565b5b61395989828a016134b2565b92509250509295509295509295565b600060808201905061397d60008301876133db565b61398a60208301866133b1565b818103604083015261399c81856137a8565b90506139ab606083018461331a565b95945050505050565b6139bd81613425565b82525050565b600082825260208201905092915050565b60006139df82613751565b6139e981856139c3565b93506139f981856020860161376d565b613a0281613797565b840191505092915050565b613a16816137e1565b82525050565b613a258161330e565b82525050565b600060e083016000830151613a4360008601826139b4565b506020830151613a5660208601826139b4565b506040830151613a696040860182613680565b5060608301518482036060860152613a8182826139d4565b91505060808301518482036080860152613a9b82826139d4565b91505060a0830151613ab060a0860182613a0d565b5060c0830151613ac360c0860182613a1c565b508091505092915050565b60006020820190508181036000830152613ae88184613a2b565b905092915050565b60006040820190508181036000830152613b0a8185613a2b565b9050613b1960208301846133db565b9392505050565b6000819050919050565b613b3b613b3682613344565b613b20565b82525050565b6000819050919050565b613b5c613b57826133a7565b613b41565b82525050565b60008160601b9050919050565b6000613b7a82613b62565b9050919050565b6000613b8c82613b6f565b9050919050565b613ba4613b9f82613425565b613b81565b82525050565b6000613bb68286613b2a565b602082019150613bc68285613b4b565b602082019150613bd68284613b93565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613c5d57607f821691505b602082108103613c7057613c6f613c16565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613cd87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613c9b565b613ce28683613c9b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613d1f613d1a613d15846133a7565b613cfa565b6133a7565b9050919050565b6000819050919050565b613d3983613d04565b613d4d613d4582613d26565b848454613ca8565b825550505050565b600090565b613d62613d55565b613d6d818484613d30565b505050565b5b81811015613d9157613d86600082613d5a565b600181019050613d73565b5050565b601f821115613dd657613da781613c76565b613db084613c8b565b81016020851015613dbf578190505b613dd3613dcb85613c8b565b830182613d72565b50505b505050565b600082821c905092915050565b6000613df960001984600802613ddb565b1980831691505092915050565b6000613e128383613de8565b9150826002028217905092915050565b613e2b82613751565b67ffffffffffffffff811115613e4457613e43613be7565b5b613e4e8254613c45565b613e59828285613d95565b600060209050601f831160018114613e8c5760008415613e7a578287015190505b613e848582613e06565b865550613eec565b601f198416613e9a86613c76565b60005b82811015613ec257848901518255600182019150602085019450602081019050613e9d565b86831015613edf5784890151613edb601f891682613de8565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000613f0f838561375c565b9350613f1c838584613ef4565b613f2583613797565b840190509392505050565b60006020820190508181036000830152613f4b818486613f03565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f8e826133a7565b9150613f99836133a7565b9250828201905080821115613fb157613fb0613f54565b5b92915050565b6000613fc2826133a7565b9150613fcd836133a7565b9250828203905081811115613fe557613fe4613f54565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000815461402781613c45565b614031818661375c565b9450600182166000811461404c576001811461406257614095565b60ff198316865281151560200286019350614095565b61406b85613c76565b60005b8381101561408d5781548189015260018201915060208101905061406e565b808801955050505b50505092915050565b60006040820190506140b360008301856133db565b81810360208301526140c5818461401a565b90509392505050565b60006040820190506140e360008301866133db565b81810360208301526140f6818486613f03565b9050949350505050565b600061410b826133a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361413d5761413c613f54565b5b600182019050919050565b60006141548287613b93565b6014820191506141648286613b93565b6014820191506141748285613b2a565b6020820191506141848284613b4b565b60208201915081905095945050505050565b60006060820190506141ab60008301886133db565b81810360208301526141be818688613f03565b905081810360408301526141d3818486613f03565b90509695505050505050565b60006020820190506141f46000830184613742565b92915050565b600060408201905061420f6000830185613742565b61421c60208301846133db565b939250505056fea26469706673582212209e5eef12751af6877a53034934260876a1955960207742a27cfb057853dc101864736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "cancelEmergencyRevocation(bytes32)": {
        "params": {
          "emergencyId": "The emergency revocation ID"
        }
      },
      "executeEmergencyRevocation(bytes32)": {
        "params": {
          "emergencyId": "The emergency revocation ID"
        }
      },
      "getCredential(bytes32)": {
        "params": {
          "credentialId": "The credential ID"
        },
        "returns": {
          "_0": "The credential data"
        }
      },
      "getIssuerCredentialCount(address)": {
        "params": {
          "issuer": "Issuer address  "
        },
        "returns": {
          "_0": "Number of credentials for issuer"
        }
      },
      "getIssuerCredentials(address,uint256,uint256)": {
        "params": {
          "issuer": "Issuer address",
          "limit": "Maximum number of items to return (max 100)",
          "offset": "Starting index"
        },
        "returns": {
          "credentialIds": "Array of credential IDs",
          "totalCount": "Total number of credentials for this issuer"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getStudentCredentialCount(address)": {
        "params": {
          "student": "Student address"
        },
        "returns": {
          "_0": "Number of credentials for student"
        }
      },
      "getStudentCredentials(address,uint256,uint256)": {
        "params": {
          "limit": "Maximum number of items to return (max 100)",
          "offset": "Starting index",
          "student": "Student address"
        },
        "returns": {
          "credentialIds": "Array of credential IDs",
          "totalCount": "Total number of credentials for this student"
        }
      },
      "getTotalCredentials()": {
        "returns": {
          "_0": "Total credential count"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initiateEmergencyRevocation(bytes32,string)": {
        "params": {
          "credentialId": "The credential to revoke",
          "reason": "Reason for emergency revocation"
        }
      },
      "isDocHashRevokedByIssuer(address,bytes32)": {
        "params": {
          "docHash": "The document hash",
          "issuer": "The issuer address"
        },
        "returns": {
          "_0": "True if revoked by this issuer"
        }
      },
      "isIssuer(address)": {
        "params": {
          "account": "Address to check"
        },
        "returns": {
          "_0": "True if account has issuer role"
        }
      },
      "issueCredential(address,bytes32,string,string)": {
        "params": {
          "docHash": "keccak256(file) or keccak256(fileBytes)",
          "metadataURI": "pointer to Azure/IPFS (no PII)",
          "schema": "e.g., \"transcript\", \"certificate\"",
          "student": "Student wallet address"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeCredential(bytes32,string)": {
        "params": {
          "credentialId": "The credential to revoke",
          "reason": "Reason for revocation"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelEmergencyRevocation(bytes32)": {
        "notice": "Cancel pending emergency revocation"
      },
      "executeEmergencyRevocation(bytes32)": {
        "notice": "Execute emergency revocation after timelock period"
      },
      "getCredential(bytes32)": {
        "notice": "Get credential by ID"
      },
      "getIssuerCredentialCount(address)": {
        "notice": "Get issuer credential count"
      },
      "getIssuerCredentials(address,uint256,uint256)": {
        "notice": "Get issuer credentials with pagination  "
      },
      "getStudentCredentialCount(address)": {
        "notice": "Get student credential count"
      },
      "getStudentCredentials(address,uint256,uint256)": {
        "notice": "Get student credentials with pagination"
      },
      "getTotalCredentials()": {
        "notice": "Get total number of credentials issued"
      },
      "initiateEmergencyRevocation(bytes32,string)": {
        "notice": "Initiate emergency revocation (with timelock for admin safety)"
      },
      "isDocHashRevokedByIssuer(address,bytes32)": {
        "notice": "Check if a document hash is revoked by a specific issuer"
      },
      "isIssuer(address)": {
        "notice": "Check if an address has issuer role"
      },
      "issueCredential(address,bytes32,string,string)": {
        "notice": "Issue a credential with scoped document hash validation"
      },
      "revokeCredential(bytes32,string)": {
        "notice": "Revoke a credential (only by original issuer)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 27,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
      },
      {
        "astId": 418,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "_paused",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 633,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "credentials",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(Credential)619_storage)"
      },
      {
        "astId": 637,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "docHashToId",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_bytes32)"
      },
      {
        "astId": 643,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "issuerRevokedDocHashes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 647,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "studentCredentialCount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 651,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "issuerCredentialCount",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 657,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "studentCredentialByIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))"
      },
      {
        "astId": 663,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "issuerCredentialByIndex",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))"
      },
      {
        "astId": 667,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "credentialToStudentIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 671,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "credentialToIssuerIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 676,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "emergencyRevocations",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_bytes32,t_struct(EmergencyRevocation)628_storage)"
      },
      {
        "astId": 678,
        "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
        "label": "_credentialCounter",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bytes32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bytes32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bytes32)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_struct(Credential)619_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct CredentialRegistry.Credential)",
        "numberOfBytes": "32",
        "value": "t_struct(Credential)619_storage"
      },
      "t_mapping(t_bytes32,t_struct(EmergencyRevocation)628_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct CredentialRegistry.EmergencyRevocation)",
        "numberOfBytes": "32",
        "value": "t_struct(EmergencyRevocation)628_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)22_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Credential)619_storage": {
        "encoding": "inplace",
        "label": "struct CredentialRegistry.Credential",
        "members": [
          {
            "astId": 606,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "student",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 608,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "issuer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 610,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "docHash",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 612,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "schema",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 614,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "metadataURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 616,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "issuedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint64"
          },
          {
            "astId": 618,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "revoked",
            "offset": 8,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(EmergencyRevocation)628_storage": {
        "encoding": "inplace",
        "label": "struct CredentialRegistry.EmergencyRevocation",
        "members": [
          {
            "astId": 621,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "credentialId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 623,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 625,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "reason",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 627,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(RoleData)22_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 19,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 21,
            "contract": "contracts/CredentialRegistry.sol:CredentialRegistry",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}